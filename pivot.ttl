# Profiles for testing pivot functionality
#
# to generate a query of the form
#
#  construct {
#    ?focus_node a prez:FocusNode .
#    ?focus_node ?keys ?values .
#  }
#  where {
#    ?focus_node <some_path> ?keys .
#    ?focus_node <other_path> ?values .
#  }

@prefix altr-ext: <http://www.w3.org/ns/dx/connegp/altr-ext#> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix prez: <https://prez.dev/> .
@prefix prof: <http://www.w3.org/ns/dx/prof/> .
@prefix profile: <https://prez.dev/profile/> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix shext: <http://example.com/shacl-extension#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .

profile:pivot-assoc a prof:Profile, prez:ListingProfile ;
  dcterms:identifier "pivot-assoc"^^xsd:token ;
  dcterms:title "Pivot Associations" ;
  dcterms:description "Pivot agent associations on a catalog around the role" ;
  altr-ext:constrainsClass dcat:Catalog ;
  altr-ext:hasDefaultResourceFormat "text/anot+turtle" ;
  altr-ext:hasResourceFormat "application/geo+json" ,
      "application/ld+json" ,
      "application/anot+ld+json" ,
      "application/rdf+xml" ,
      "text/anot+turtle" ,
      "text/turtle" ;
  sh:property [
    shext:pivotShape [
          sh:path prov:qualifiedAssociation ;
          shext:pivotKey prov:hadRole ;
          shext:pivotValue prov:agent
      ] ;
    ] ;
.

profile:pivot-obs a prof:Profile, prez:ListingProfile ;
  dcterms:identifier "pivot-obs"^^xsd:token ;
  dcterms:title "Pivot Observations" ;
  dcterms:description "Pivot observation results on a sample around the observed property" ;
  altr-ext:constrainsClass sosa:Sample ;
  altr-ext:hasDefaultResourceFormat "text/anot+turtle" ;
  altr-ext:hasResourceFormat "application/geo+json" ,
      "application/ld+json" ,
      "application/anot+ld+json" ,
      "application/rdf+xml" ,
      "text/anot+turtle" ,
      "text/turtle" ;
  sh:property [
      shext:pivotShape [
        sh:path [ sh:inversePath sosa:hasFeatureOfInterest ] ;
        shext:pivotKey sosa:observedProperty ;
        shext:pivotValue sosa:hasSimpleResult ;
      ]
  ] ;
.

